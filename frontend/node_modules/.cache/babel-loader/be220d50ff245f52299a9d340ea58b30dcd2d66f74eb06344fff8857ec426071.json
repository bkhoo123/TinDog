{"ast":null,"code":"var _jsxFileName = \"/workspaces/TinDog/frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { restoreCSRF, csrfFetch } from './store/csrf';\nimport * as sessionActions from './store/session';\nimport configureStore from './store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst store = configureStore();\nif (process.env.NODE_ENV !== 'production') {\n  restoreCSRF();\n  window.csrfFetch = csrfFetch;\n  window.store = store;\n  window.sessionActions = sessionActions;\n}\nfunction Root() {\n  return /*#__PURE__*/_jsxDEV(ReduxProvider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_c = Root;\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n\n//     <BrowserRouter>\n//      <App />\n//     </BrowserRouter>\n\n// );\nvar _c;\n$RefreshReg$(_c, \"Root\");","map":{"version":3,"names":["React","ReactDOM","App","Provider","ReduxProvider","BrowserRouter","restoreCSRF","csrfFetch","sessionActions","configureStore","store","process","env","NODE_ENV","window","Root","render","document","getElementById"],"sources":["/workspaces/TinDog/frontend/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { restoreCSRF, csrfFetch } from './store/csrf';\nimport * as sessionActions from './store/session';\nimport configureStore from './store';\n\nconst store = configureStore()\n\nif (process.env.NODE_ENV !== 'production') {\n  restoreCSRF();\n\n  window.csrfFetch = csrfFetch;\n  window.store = store;\n  window.sessionActions = sessionActions;\n}\n\nfunction Root() {\n  return (\n    <ReduxProvider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n  </ReduxProvider>\n  )\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root/>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n  \n//     <BrowserRouter>\n//      <App />\n//     </BrowserRouter>\n  \n// );\n\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,GAAG,MAAM,OAAO;AACvB,SAASC,QAAQ,IAAIC,aAAa,QAAQ,aAAa;AACvD,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SAASC,WAAW,EAAEC,SAAS,QAAQ,cAAc;AACrD,OAAO,KAAKC,cAAc,MAAM,iBAAiB;AACjD,OAAOC,cAAc,MAAM,SAAS;AAAC;AAErC,MAAMC,KAAK,GAAGD,cAAc,EAAE;AAE9B,IAAIE,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzCP,WAAW,EAAE;EAEbQ,MAAM,CAACP,SAAS,GAAGA,SAAS;EAC5BO,MAAM,CAACJ,KAAK,GAAGA,KAAK;EACpBI,MAAM,CAACN,cAAc,GAAGA,cAAc;AACxC;AAEA,SAASO,IAAI,GAAG;EACd,oBACE,QAAC,aAAa;IAAC,KAAK,EAAEL,KAAM;IAAA,uBAC1B,QAAC,aAAa;MAAA,uBACZ,QAAC,GAAG;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA;EACO;IAAA;IAAA;IAAA;EAAA,QACJ;AAElB;AAAC,KARQK,IAAI;AAUbd,QAAQ,CAACe,MAAM,eACb,QAAC,KAAK,CAAC,UAAU;EAAA,uBACf,QAAC,IAAI;IAAA;IAAA;IAAA;EAAA;AAAE;EAAA;EAAA;EAAA;AAAA,QACU,EACnBC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAChC;;AAED;AACA;;AAEA;AACA;AACA;;AAEA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}