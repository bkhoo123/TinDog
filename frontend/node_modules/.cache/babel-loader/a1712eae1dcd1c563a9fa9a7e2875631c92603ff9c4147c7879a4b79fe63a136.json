{"ast":null,"code":"var _jsxFileName = \"/workspaces/TinDog/frontend/src/components/Chat Widget/ChatWidget.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Container from 'react-bootstrap/esm/Container';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst openai = require('@openai/api');\nconst apiKey = \"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\";\nfunction ChatWidget() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    setMessages(prevMessages => [...prevMessages, inputValue]);\n    sendMessageToBot(inputValue);\n    setInputValue('');\n  };\n  const handleRemoveChat = () => {\n    setMessages([]);\n  };\n  const sendMessageToBot = async inputValue => {\n    const response = await sendMessage({\n      model: 'davinci',\n      prompt: inputValue,\n      temperature: 0.5,\n      maxTokens: 50,\n      n: 1,\n      stop: ['\\n']\n    });\n    const message = response.choices[0].text.trim();\n    setMessages(prevMessages => [...prevMessages, message]);\n  };\n  useEffect(() => {\n    sendMessageToBot(\"Hello\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: '18rem'\n        },\n        children: message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInputChange,\n        placeholder: \"Type your message here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleRemoveChat,\n      children: \"Remove Chat History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatWidget, \"GG/YeSFNrWOWKG591Wbb47E4YjM=\");\n_c = ChatWidget;\nexport default ChatWidget;\nvar _c;\n$RefreshReg$(_c, \"ChatWidget\");","map":{"version":3,"names":["React","useState","useEffect","Container","Card","Button","openai","require","apiKey","ChatWidget","messages","setMessages","inputValue","setInputValue","handleInputChange","event","target","value","handleSubmit","preventDefault","prevMessages","sendMessageToBot","handleRemoveChat","response","sendMessage","model","prompt","temperature","maxTokens","n","stop","message","choices","text","trim","map","index","width"],"sources":["/workspaces/TinDog/frontend/src/components/Chat Widget/ChatWidget.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Container from 'react-bootstrap/esm/Container';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nconst openai = require('@openai/api');\nconst apiKey = \"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\"\n\nfunction ChatWidget() {\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setMessages((prevMessages) => [...prevMessages, inputValue]);\n    sendMessageToBot(inputValue)\n    setInputValue('');\n  };\n\n  const handleRemoveChat = () => {\n    setMessages([])\n  }\n\n  const sendMessageToBot = async (inputValue) => {\n    const response = await sendMessage({\n      model: 'davinci',\n      prompt: inputValue,\n      temperature: 0.5,\n      maxTokens: 50,\n      n: 1,\n      stop: ['\\n']\n    });\n\n    const message = response.choices[0].text.trim();\n    setMessages((prevMessages) => [...prevMessages, message]);\n  }\n\n  useEffect(() => {\n    sendMessageToBot(\"Hello\")\n  }, [])\n\n  return (\n    <Container>\n      \n      <div>\n        {messages.map((message, index) => (\n          <Card style={{ width: '18rem' }} key={index}>{message}</Card>\n        ))}\n      </div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={inputValue}\n          onChange={handleInputChange}\n          placeholder=\"Type your message here\"\n        />\n        <Button type=\"submit\">Send</Button>\n      </form>\n      <Button onClick={handleRemoveChat}>Remove Chat History</Button>\n    </Container>\n  );\n}\n\nexport default ChatWidget;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,+BAA+B;AACrD,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,MAAM,MAAM,wBAAwB;AAAC;AAC5C,MAAMC,MAAM,GAAGC,OAAO,CAAC,aAAa,CAAC;AACrC,MAAMC,MAAM,GAAG,qDAAqD;AAEpE,SAASC,UAAU,GAAG;EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMa,iBAAiB,GAAIC,KAAK,IAAK;IACnCF,aAAa,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAMC,YAAY,GAAIH,KAAK,IAAK;IAC9BA,KAAK,CAACI,cAAc,EAAE;IACtBR,WAAW,CAAES,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAER,UAAU,CAAC,CAAC;IAC5DS,gBAAgB,CAACT,UAAU,CAAC;IAC5BC,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,MAAMS,gBAAgB,GAAG,MAAM;IAC7BX,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;EAED,MAAMU,gBAAgB,GAAG,MAAOT,UAAU,IAAK;IAC7C,MAAMW,QAAQ,GAAG,MAAMC,WAAW,CAAC;MACjCC,KAAK,EAAE,SAAS;MAChBC,MAAM,EAAEd,UAAU;MAClBe,WAAW,EAAE,GAAG;MAChBC,SAAS,EAAE,EAAE;MACbC,CAAC,EAAE,CAAC;MACJC,IAAI,EAAE,CAAC,IAAI;IACb,CAAC,CAAC;IAEF,MAAMC,OAAO,GAAGR,QAAQ,CAACS,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAACC,IAAI,EAAE;IAC/CvB,WAAW,CAAES,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEW,OAAO,CAAC,CAAC;EAC3D,CAAC;EAED7B,SAAS,CAAC,MAAM;IACdmB,gBAAgB,CAAC,OAAO,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE,QAAC,SAAS;IAAA,wBAER;MAAA,UACGX,QAAQ,CAACyB,GAAG,CAAC,CAACJ,OAAO,EAAEK,KAAK,kBAC3B,QAAC,IAAI;QAAC,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAQ,CAAE;QAAA,UAAcN;MAAO,GAAfK,KAAK;QAAA;QAAA;QAAA;MAAA,QAC5C;IAAC;MAAA;MAAA;MAAA;IAAA,QACE,eACN;MAAM,QAAQ,EAAElB,YAAa;MAAA,wBAC3B;QACE,IAAI,EAAC,MAAM;QACX,KAAK,EAAEN,UAAW;QAClB,QAAQ,EAAEE,iBAAkB;QAC5B,WAAW,EAAC;MAAwB;QAAA;QAAA;QAAA;MAAA,QACpC,eACF,QAAC,MAAM;QAAC,IAAI,EAAC,QAAQ;QAAA,UAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAC9B,eACP,QAAC,MAAM;MAAC,OAAO,EAAEQ,gBAAiB;MAAA,UAAC;IAAmB;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACrD;AAEhB;AAAC,GAzDQb,UAAU;AAAA,KAAVA,UAAU;AA2DnB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}