{"ast":null,"code":"var _jsxFileName = \"/workspaces/TinDog/frontend/src/components/Chat Widget/ChatWidget.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Container from 'react-bootstrap/esm/Container';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport './chat.css';\nimport { csrfFetch } from '../../store/csrf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = \"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\";\nfunction ChatWidget() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [switchUser, setSwitchUser] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setMessages(prevMessages => [...prevMessages, inputValue]);\n    const data = await sendMessage(inputValue);\n    console.log(data, 'data');\n    setInputValue('');\n  };\n  const handleRemoveChat = () => {\n    setMessages([]);\n  };\n  const sendMessage = async message => {\n    try {\n      const response = await csrfFetch('/api/chats/gpt', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message\n        })\n      });\n      const data = await response.json();\n      setMessages(prevMessages => [...prevMessages, data.botResponse]);\n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      paddingTop: 10\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-bot\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(Card, {\n        className: index % 2 === 0 ? 'user' : 'chatbot',\n        style: {\n          width: '30rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: index % 2 === 0 ? \"User\" : \"ChatGPT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), message]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          height: 150,\n          width: 300,\n          borderRadius: 5,\n          textAlign: 'center'\n        },\n        type: \"textarea\",\n        value: inputValue,\n        onChange: handleInputChange,\n        placeholder: \"Type your message here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          marginTop: 15\n        },\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          marginLeft: 10,\n          paddingTop: 15\n        },\n        onClick: handleRemoveChat,\n        children: \"Remove Chat History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatWidget, \"M0AbZVpXD1fDWK9Ffsjdt15fQz4=\");\n_c = ChatWidget;\nexport default ChatWidget;\nvar _c;\n$RefreshReg$(_c, \"ChatWidget\");","map":{"version":3,"names":["React","useState","useEffect","Container","Card","Button","axios","csrfFetch","apiKey","ChatWidget","messages","setMessages","switchUser","setSwitchUser","inputValue","setInputValue","handleInputChange","event","target","value","handleSubmit","preventDefault","prevMessages","data","sendMessage","console","log","handleRemoveChat","message","response","method","headers","body","JSON","stringify","json","botResponse","error","paddingTop","map","index","width","height","borderRadius","textAlign","marginTop","marginLeft"],"sources":["/workspaces/TinDog/frontend/src/components/Chat Widget/ChatWidget.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Container from 'react-bootstrap/esm/Container';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport './chat.css'\n\nimport { csrfFetch } from '../../store/csrf';\n\nconst apiKey = \"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\"\n\nfunction ChatWidget() {\n  const [messages, setMessages] = useState([]);\n  const [switchUser, setSwitchUser] = useState(false)\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setMessages((prevMessages) => [...prevMessages, inputValue]);\n\n    const data = await sendMessage(inputValue)\n    \n    console.log(data, 'data')\n    setInputValue('');\n  };\n\n  const handleRemoveChat = () => {\n    setMessages([])\n  }\n\n  const sendMessage = async (message) => {\n    try {\n      const response = await csrfFetch('/api/chats/gpt', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({message})\n      })\n\n      const data = await response.json()\n      setMessages((prevMessages) => [...prevMessages, data.botResponse]);\n      return data\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n\n  return (\n    <Container style={{paddingTop: 10}}>\n      \n      <div className=\"chat-bot\" >\n        {messages.map((message, index) => (\n          <Card className={index % 2 === 0 ? 'user' : 'chatbot' } style={{ width: '30rem' }} key={index}>\n            <Card.Title>{index % 2 === 0 ? \"User\" : \"ChatGPT\"}</Card.Title>\n            {message}\n            \n          </Card>\n        ))}\n      </div>\n      <form onSubmit={handleSubmit}>\n        <input\n          style={{height: 150, width: 300, borderRadius: 5, textAlign: 'center'}}\n          type=\"textarea\"\n          value={inputValue}\n          onChange={handleInputChange}\n          placeholder=\"Type your message here\"\n        />\n      <div>\n\n      </div>\n      \n        <Button style={{marginTop: 15}} type=\"submit\">Send</Button>\n        <Button style={{marginLeft: 10, paddingTop: 15}} onClick={handleRemoveChat}>Remove Chat History</Button>\n\n        \n      </form>\n      \n      \n    </Container>\n  );\n}\n\nexport default ChatWidget;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}