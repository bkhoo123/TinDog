{"ast":null,"code":"var _jsxFileName = \"/workspaces/TinDog/frontend/src/components/Dogs/matchmakingdogs.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDogs } from '../../context/DogContext';\nimport { useState, useEffect } from 'react';\nimport Container from 'react-bootstrap/esm/Container';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MatchMakingDogs() {\n  _s();\n  const {\n    dogs,\n    setDogs\n  } = useDogs();\n  const dogsArray = Object.values(dogs);\n  console.log(dogsArray);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: dogs.map((dog, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: '18rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n          style: {\n            height: '300px',\n            width: '100%'\n          },\n          variant: \"top\",\n          src: dog\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                marginRight: 10\n              },\n              className: \"dog-circle\",\n              src: dog,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 37\n            }, this), \" \", split[index], \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              marginTop: 5\n            },\n            variant: \"primary\",\n            children: \"Message Me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)\n    }, void 0, false))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(MatchMakingDogs, \"NbiL/miQ8tcE9MRrVL6Z8FT/8M0=\", false, function () {\n  return [useDogs];\n});\n_c = MatchMakingDogs;\nvar _c;\n$RefreshReg$(_c, \"MatchMakingDogs\");","map":{"version":3,"names":["React","useDogs","useState","useEffect","Container","MatchMakingDogs","dogs","setDogs","dogsArray","Object","values","console","log","map","dog","index","width","height","marginRight","split","marginTop"],"sources":["/workspaces/TinDog/frontend/src/components/Dogs/matchmakingdogs.js"],"sourcesContent":["import React from 'react'\nimport { useDogs } from '../../context/DogContext'\nimport { useState, useEffect } from 'react'\nimport Container from 'react-bootstrap/esm/Container'\n\nexport default function MatchMakingDogs() {\n  const {dogs, setDogs} = useDogs()\n  const dogsArray = Object.values(dogs)\n  console.log(dogsArray)\n  \n\n\n \n\n  return (\n    <Container>\n      {dogs.map((dog, index) => (\n        <>\n          <Card style={{ width: '18rem' }}>\n                    <Card.Img style={{height: '300px', width: '100%'}} variant=\"top\" src={dog} />\n                    <Card.Body>\n                        <Card.Title><img style={{marginRight: 10}} className=\"dog-circle\" src={dog} alt=\"\" /> {split[index]} </Card.Title>\n                        {/* <Card.Text>\n                        Some quick example text to build on the card title and make up the\n                        bulk of the card's content.\n                        </Card.Text> */}\n                        <Button style={{marginTop: 5}} variant=\"primary\">Message Me</Button>\n                    </Card.Body>\n                </Card>\n        </>\n      ))}\n    </Container>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,0BAA0B;AAClD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,SAAS,MAAM,+BAA+B;AAAA;AAAA;AAErD,eAAe,SAASC,eAAe,GAAG;EAAA;EACxC,MAAM;IAACC,IAAI;IAAEC;EAAO,CAAC,GAAGN,OAAO,EAAE;EACjC,MAAMO,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACJ,IAAI,CAAC;EACrCK,OAAO,CAACC,GAAG,CAACJ,SAAS,CAAC;EAMtB,oBACE,QAAC,SAAS;IAAA,UACPF,IAAI,CAACO,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACnB;MAAA,uBACE,QAAC,IAAI;QAAC,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAQ,CAAE;QAAA,wBACtB,QAAC,IAAI,CAAC,GAAG;UAAC,KAAK,EAAE;YAACC,MAAM,EAAE,OAAO;YAAED,KAAK,EAAE;UAAM,CAAE;UAAC,OAAO,EAAC,KAAK;UAAC,GAAG,EAAEF;QAAI;UAAA;UAAA;UAAA;QAAA,QAAG,eAC7E,QAAC,IAAI,CAAC,IAAI;UAAA,wBACN,QAAC,IAAI,CAAC,KAAK;YAAA,wBAAC;cAAK,KAAK,EAAE;gBAACI,WAAW,EAAE;cAAE,CAAE;cAAC,SAAS,EAAC,YAAY;cAAC,GAAG,EAAEJ,GAAI;cAAC,GAAG,EAAC;YAAE;cAAA;cAAA;cAAA;YAAA,QAAG,KAAC,EAACK,KAAK,CAACJ,KAAK,CAAC,EAAC,GAAC;UAAA;YAAA;YAAA;YAAA;UAAA,QAAa,eAKlH,QAAC,MAAM;YAAC,KAAK,EAAE;cAACK,SAAS,EAAE;YAAC,CAAE;YAAC,OAAO,EAAC,SAAS;YAAA,UAAC;UAAU;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA;UAAA;UAAA;UAAA;QAAA,QAC5D;MAAA;QAAA;QAAA;QAAA;MAAA;IACT,iBAEhB;EAAC;IAAA;IAAA;IAAA;EAAA,QACQ;AAEhB;AAAC,GA5BuBf,eAAe;EAAA,QACbJ,OAAO;AAAA;AAAA,KADTI,eAAe;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}